[{"/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/index.tsx":"1","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/reportWebVitals.ts":"2","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/App.tsx":"3","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/route/RouterAuth.tsx":"4","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/route/RouterMap.ts":"5","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/pages/Profile/Profile.tsx":"6","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/pages/404.tsx":"7","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/pages/Article/Article.tsx":"8","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/pages/Articles/Articles.tsx":"9","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/pages/Login/Login.tsx":"10","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/pages/Tags/Tags.tsx":"11","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/apis/apis.ts":"12","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/utils/DateUtils.ts":"13","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/components/Layout/Layout.tsx":"14","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/utils/request.ts":"15","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/components/Layout/Slide.tsx":"16","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/components/Layout/Main.tsx":"17","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/pages/Images/Images.tsx":"18"},{"size":500,"mtime":1611502716000,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":1611502218000,"results":"21","hashOfConfig":"20"},{"size":798,"mtime":1645618638363,"results":"22","hashOfConfig":"20"},{"size":1585,"mtime":1645535686180,"results":"23","hashOfConfig":"20"},{"size":906,"mtime":1648647677117,"results":"24","hashOfConfig":"20"},{"size":1566,"mtime":1643376690000,"results":"25","hashOfConfig":"20"},{"size":290,"mtime":1642929850000,"results":"26","hashOfConfig":"20"},{"size":4525,"mtime":1648394255189,"results":"27","hashOfConfig":"20"},{"size":6722,"mtime":1644063895000,"results":"28","hashOfConfig":"20"},{"size":2835,"mtime":1645535719815,"results":"29","hashOfConfig":"20"},{"size":8691,"mtime":1644035791000,"results":"30","hashOfConfig":"20"},{"size":2732,"mtime":1649055538730,"results":"31","hashOfConfig":"20"},{"size":1164,"mtime":1643948334000,"results":"32","hashOfConfig":"20"},{"size":297,"mtime":1611582986000,"results":"33","hashOfConfig":"20"},{"size":1086,"mtime":1650881696752,"results":"34","hashOfConfig":"20"},{"size":1095,"mtime":1648648682553,"results":"35","hashOfConfig":"20"},{"size":1203,"mtime":1649250504730,"results":"36","hashOfConfig":"20"},{"size":2252,"mtime":1649063298671,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"f84ep7",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},"/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/index.tsx",[],["83","84"],"/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/reportWebVitals.ts",[],"/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/App.tsx",["85"],"import React from 'react';\nimport {\n    BrowserRouter as Router, Route,\n    Switch,\n    // Route\n} from 'react-router-dom'\nimport './App.less';\nimport \"./theme.less\"\n\nimport RouterAuth from \"./route/RouterAuth\";\n// import Article from \"./pages/Article/Article\";\n\nfunction App() {\n    return (\n        <Router basename=\"/blog/manage\">\n            <Switch>\n                <RouterAuth />\n                {/*<Route exact path=\"/\">*/}\n                {/*    <Profile/>*/}\n                {/*</Route>*/}\n                {/*<Route path=\"/article/:id\">*/}\n                {/*    <Article />*/}\n                {/*</Route>*/}\n                {/*<Route path=\"/login\">*/}\n                {/*    <Login/>*/}\n                {/*</Route>*/}\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/route/RouterAuth.tsx",["86"],"// 路由拦截\nimport {\n    Route,\n    Redirect,\n    useLocation, useParams,\n} from \"react-router-dom\";\n// @ts-ignore\nimport Cookies from \"js-cookie\";\n\nimport routerMap from \"./RouterMap\";\n\nfunction RouterAuth() {\n    const isLogin = Cookies.get(\"UM_TOKEN\");\n    const { pathname } = useLocation();\n\n    /* 查找当前url路径是否有路由配置里有，没有的话就是404 */\n    const targetRouterConfig = routerMap.find(\n        (item: any) => {\n\n            // 这个判断是为了处理带变量的路径\n            if(item.path.match(\":\")) {\n                return pathname.includes(item.path.split(\":\")[0])\n            }\n            return item.path === pathname\n        }\n    )\n    // 不需要登录 并且 未登录\n    if (targetRouterConfig && !targetRouterConfig.auth && !isLogin) {\n        const component = targetRouterConfig.component\n        return <Route exact path={pathname} component={component}/>\n    }\n\n    if (isLogin) {\n        if (pathname === \"/login\") {\n            return <Redirect to=\"/profile\"/>\n        } else {\n            if (targetRouterConfig) {\n                return (\n                    <Route path={targetRouterConfig.path} exact component={targetRouterConfig.component}/>\n                )\n            } else {\n                return <Redirect exact to=\"/404\"/>;\n            }\n        }\n    } else { // 未登录\n        if (targetRouterConfig && targetRouterConfig.auth) {\n            return <Redirect exact to=\"/login\"/>\n        } else {\n            return <Redirect exact to=\"/404\"/>;\n        }\n    }\n\n}\n\nexport default RouterAuth;","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/route/RouterMap.ts",[],"/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/pages/Profile/Profile.tsx",[],"/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/pages/404.tsx",[],"/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/pages/Article/Article.tsx",["87","88","89","90"],"import '@toast-ui/editor/dist/toastui-editor.css';\nimport {Editor} from \"@toast-ui/editor\";\n\nimport React, {useEffect, useState} from \"react\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport Layout from \"../../components/Layout/Layout\";\nimport {Button, Col, Form, Input, Row, Select, message} from \"antd\";\nimport service from '../../apis/apis'\nimport DateUtils from \"../../utils/DateUtils\";\n\n\nconst Article = () => {\n    const {id} = useParams<any>();\n    const history = useHistory();\n    let editor: Editor;\n    const [form] = Form.useForm();\n    const [tagOptions, setTagOptions] = useState<Array<JSX.Element>>([])\n    const {Option} = Select;\n\n    useEffect(() => {\n        if(!editor) {\n            // @ts-ignore\n            window.editor = editor = new Editor({\n                // @ts-ignore\n                el: document.querySelector('#editorSection'),\n                previewStyle: 'vertical',\n                height: '600px',\n            });\n        }\n        // 处理页面首次数据\n        getPageData()\n\n    }, [])\n    async function getPageData() {\n        try {\n            // 初始化标签数据\n            const res: any = await service.fetchTagList();\n            const map = res.items.map((item: any, index: number) => {\n                return <Option value={item.id} key={item.id}>{item.name}</Option>\n            })\n            setTagOptions(map);\n\n            if(id == \"add\") return\n            // 文章数据回显\n            const res2: any = await service.fetchArticleDetail(id);\n            form.setFieldsValue({name: res2.title, tags: res2.tagIds})\n            editor.setHTML(res2.content)\n\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    /**\n     * 保存\n     */\n    async function onSave(values: any) {\n        try {\n            // console.log(values);\n            // @ts-ignore\n            // console.log(window.editor.getHTML()); replaceDataLanguage(window.editor.getHTML()),\n            const param = {\n                title: values.name,\n                // @ts-ignore\n                content: window.editor.getHTML(),\n                tagIds: values.tags,\n                isRecommend: false,\n                isPublish: true\n            }\n            let apiName: string = \"fetchSaveArticle\"\n            if( id != \"add\") {\n                apiName = \"fetchEditArticle\"\n                // @ts-ignore\n                param.id = id;\n            }\n\n            // @ts-ignore\n            const res: any = await service[apiName](param)\n            if(res.status === 201 || res.status === 204) {\n                await message.success(\"保存成功\")\n                history.go(-1);\n            }\n            if(res.code === 500) {\n                message.error(\"保存失败\")\n            }\n\n        }catch (e) {\n            console.log(e);\n        }\n    }\n\n    return (\n        <Layout>\n            <Form\n                form={form}\n                name=\"article-editor-form\"\n                onFinish={onSave}\n            >\n                <Row gutter={20} style={{margin: \"20px 0\"}}>\n                    <Col span={9}>\n                        <Form.Item\n                            name=\"name\"\n                            label=\"文章标题\"\n                            rules={[{required: true, message: '请输入文章标题'}]}\n                        >\n                            <Input placeholder=\"文章标题\" name=\"articleName\"/>\n                        </Form.Item>\n                    </Col>\n                    <Col span={9}>\n                        <Form.Item\n                            name=\"tags\"\n                            label=\"标签\"\n                            rules={[{required: true, message: '请选择标签'}]}\n                        >\n                            <Select\n                                mode=\"multiple\"\n                                style={{width: '100%'}}\n                                placeholder=\"请选择标签\"\n                            >\n                                {tagOptions}\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    {/* 保存 */}\n                    <Col span={6} style={{textAlign: \"right\"}}>\n                        <Button style={{width: \"160px\"}} type=\"primary\" htmlType=\"submit\" size=\"large\"> 保存 </Button>\n                    </Col>\n                </Row>\n\n            </Form>\n\n            <section id=\"editorSection\">\n            </section>\n        </Layout>\n    )\n}\n\nexport default Article;\n","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/pages/Articles/Articles.tsx",["91","92","93","94"],"import React, {useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {Form, Row, Col, Input, Button, Table, Space, Modal, message} from 'antd';\nimport {ExclamationCircleOutlined} from '@ant-design/icons';\nimport Layout from \"../../components/Layout/Layout\";\nimport service from \"../../apis/apis\"\n\ninterface DataType {\n    id: number\n    key: React.Key\n    name: string\n    tags: string[]\n    time: string\n}\n\n\nconst Articles = () => {\n    const [form] = Form.useForm();\n    const history: any = useHistory()\n\n    /**\n     * 请求接口\n     * @param page\n     * @param rows\n     * @param keywords\n     */\n    async function getData(page: number, rows: number, keywords?: string) {\n        try {\n            const param = {\n                page: page,\n                rows: rows\n            }\n            // @ts-ignore\n            keywords && (param.keywords = keywords)\n            const res:any = await service.fetchArticleListPage(param)\n            if(res.code == 404) {\n                message.error(\"示查询到相关文章\")\n                setTableData([])\n                return\n            }\n\n            const tagRes: any = await service.fetchTagList();\n\n            const map: Map<number, string> = new Map<number, string>();\n\n            for (let i = 0; i < tagRes.items.length; i++) {\n                map.set(tagRes.items[i].id, tagRes.items[i].name);\n            }\n\n            const map2 = res.items.map((item: any, index: number) => {\n                let tagNames = \"\";\n                item.tagIds.forEach((tag: number, i: number) => {\n                    i && (tagNames += \"、\")\n                    tagNames += map.get(tag)\n                })\n                return {\n                    id: item.id,\n                    key: index,\n                    name: item.title,\n                    tags: tagNames,\n                    time: item.createTime,\n                }\n            })\n            setTableData(map2)\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    /**\n     * 搜索文章\n     * @param values 字段对象\n     */\n    async function onFinish(values: any) {\n        setPage(1);\n        setRows(5);\n        await getData(page, rows, values.keywords)\n    }\n\n    /**\n     * 重置表单\n     */\n    async function resetForm() {\n        form.resetFields();\n        setPage(1);\n        setRows(5);\n        await getData(page, rows)\n    }\n\n    const rowSelection = {\n        onChange: (selectedRowKeys: React.Key[], selectedRows: DataType[]) => {\n            console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n        },\n        getCheckboxProps: (record: DataType) => ({\n            disabled: record.name === 'Disabled User',\n            name: record.name,\n        }),\n    };\n\n    /*  表格数据 */\n    const [tableData, setTableData] = useState<Array<DataType>>([]);\n    const [page, setPage] = useState(1);\n    const [rows, setRows] = useState(10);\n    // const [sortBy, setSortBy] = useState(\"createTime\") 排序先不做\n\n    useEffect(() => {\n        getData(page, rows).catch(e => {\n            console.log(e);\n        })\n    }, [])\n\n    /**\n     * 去编辑文章页面\n     * @param id {Number}\n     */\n    function onToEdit(id: number) {\n        history.push(`/article/${id}`);\n    }\n\n    /**\n     * 去新增文章页面\n     */\n    function onToAdd() {\n        history.push(`/article/add`)\n    }\n\n    /**\n     * 删除文章\n     * @param id {Number}\n     * @param index\n     */\n    function onDelete(id: number, index: any) {\n        Modal.confirm({\n            title: '确诊删除吗',\n            icon: <ExclamationCircleOutlined/>,\n            okText: '确认',\n            cancelText: '取消',\n            onOk: async () => {\n                try {\n                    // alert(\"delete:\" + id)\n                    console.log(index)\n                    const res = await service.fetchDeleteArticle(id)\n                    if(res.status === 204) {\n                        message.success(\"删除成功\")\n                        tableData.splice(index, 1)\n                        const result = tableData.map(item => item)\n                        setTableData(result)\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n\n            }\n        })\n    }\n\n    const columns = [\n        {\n            title: '文章标题',\n            dataIndex: 'name',\n            key: 'name'\n        },\n        {\n            title: '标签',\n            dataIndex: 'tags',\n            key: 'tags',\n        },\n        {\n            title: '发布时间',\n            dataIndex: 'time',\n            key: 'time',\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text: string, record: DataType) => (\n                <Space size=\"middle\">\n                    <a onClick={() => onDelete(record.id, record.key)} style={{color: \"#f5222d\"}}> 删除</a>\n                    <a onClick={() => onToEdit(record.id)}> 编辑 </a>\n                </Space>\n            ),\n        },\n    ];\n\n    return (\n        <Layout>\n            {/* 查询表单 */}\n            <Form\n                form={form}\n                name=\"advanced_search\"\n                className=\"advanced-search-form\"\n                onFinish={onFinish}\n            >\n                <Row>\n                    <Col span={8}>\n                        <Form.Item\n                            name=\"keywords\"\n                            label=\"搜索文章\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '请输入查询关键词',\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"关键词\" name=\"tag\"/>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Button style={{margin: \"0 8px\"}} type=\"primary\" htmlType=\"submit\"> 搜索 </Button>\n                        <Button onClick={() => resetForm()}> 重置 </Button>\n                    </Col>\n                </Row>\n            </Form>\n\n            {/* 新增 */}\n            <Button type=\"primary\" onClick={() => onToAdd()}> 创建一篇文章 </Button>\n            <br/>\n            <br/>\n\n            {/* table数据展示 */}\n            <Table\n                rowSelection={{\n                    type: \"checkbox\",\n                    ...rowSelection,\n                }}\n                dataSource={tableData}\n                columns={columns}\n            />\n        </Layout>\n    )\n}\n\nexport default Articles;","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/pages/Login/Login.tsx",["95"],"import './Login.scss';\nimport React, {\n    // useEffect,\n    useState\n} from 'react';\nimport md5 from \"md5\";\nimport {Button, Input, Space, message} from \"antd\";\nimport {EyeInvisibleOutlined, EyeTwoTone} from \"@ant-design/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport service from \"../../apis/apis\"\n// @ts-ignore\nimport Cookies from \"js-cookie\";\n\nfunction Login() {\n    const [username, setUsername] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n\n    // useEffect(getData, [username, password]) // 相当于监听这个变量，变量改变时会触发这个函数\n    const history: any = useHistory();\n\n    async function onLogin() {\n        try {\n            if (username === \"\") {\n            message.warning(\"pleas enter username\")\n            return\n        }\n        if (password === \"\") {\n            message.warning(\"pleas enter password\")\n            return\n        }\n        // todo use api\n        const formData = new FormData();\n        formData.append(\"username\", username);\n        formData.append(\"password\", md5(password));\n        const res: any = await service.login(formData);\n        console.log(\"password:\" + md5(password));\n        if(res.code == 200) {\n            localStorage.setItem(\"user\", JSON.stringify(res.data))\n            // sessionStorage.setItem(\"token\", res.data.token);\n            Cookies.set(\"UM_TOKEN\", res.data.token)\n        // window.location.replace(\"/\");\n        // history.push(\"/\")\n        history.replace(\"/profile\")\n        } else {\n            message.error(res.msg)\n        }\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    // function getData() {\n    //     console.log(username + \" : \" + password)\n    // }\n\n    function onChangeUsername(e: React.ChangeEvent<HTMLInputElement>) {\n        setUsername(e.target.value)\n    }\n\n    function onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n        setPassword(e.target.value)\n    }\n\n    return (\n        <section className=\"login-page\">\n            <div className=\"container\">\n\n              <h1 className=\"heading\">UM, Login</h1>\n              <Space direction=\"vertical\">\n\n                <Input\n                  placeholder=\"input username\"\n                  value={username}\n                  onChange={onChangeUsername}\n                />\n\n                <Input.Password\n                  placeholder=\"input password\"\n                  iconRender={visible => (visible ? <EyeTwoTone/> : <EyeInvisibleOutlined/>)}\n                  value={password}\n                  onChange={onChangePassword}\n                  onPressEnter={onLogin}\n                />\n              </Space>\n              <Button type=\"primary\" className=\"login_button\" onClick={onLogin}> 登录 </Button>\n\n            </div>\n        </section>\n    )\n}\n\nexport default Login;\n","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/pages/Tags/Tags.tsx",["96","97"],"import React, {useEffect, useState} from \"react\";\nimport {Form, Row, Col, Input, Button, Modal, Table, Space, message} from 'antd';\nimport Layout from \"../../components/Layout/Layout\";\nimport {ExclamationCircleOutlined} from \"@ant-design/icons\";\nimport service from '../../apis/apis'\nimport DateUtils from \"../../utils/DateUtils\";\n\ninterface DataType {\n    id: number,\n    key: React.Key;\n    name: string;\n    time: string;\n}\n\n// rowSelection object indicates the need for row selection\nconst rowSelection = {\n    onChange: (selectedRowKeys: React.Key[], selectedRows: DataType[]) => {\n        console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n    },\n    getCheckboxProps: (record: DataType) => ({\n        disabled: record.name === 'Disabled User',\n        name: record.name,\n    }),\n};\n\nconst Tags = () => {\n\n    const [isShowModal, setIsShowModal] = useState(false);\n    const [form] = Form.useForm();\n\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        service.fetchTagList().then((res: any) => {\n            const map = res.items.map((item: any, index: number) => {\n                return {\n                    id: item.id,\n                    key: index,\n                    name: item.name,\n                    time: DateUtils.formatDate(item.createTime),\n                }\n            })\n            setData(map);\n        }).catch(e => {\n            console.error(e);\n        })\n    }, [])\n\n    /**\n     * 表单提交\n     * @param values 字段对象\n     */\n    async function onFinish(values: any) {\n        try {\n            const res: any = await service.fetchTagByName(values.keywords)\n            if(res.code !== 200) {\n                message.error(res.msg);\n                setData([]);\n                return\n            }\n            const resTagItem: DataType[] = [{\n                id: res.data.id,\n                key: 0,\n                name: res.data.name,\n                time: DateUtils.formatDate(res.data.createTime),\n            }]\n\n            // @ts-ignore\n            setData(resTagItem)\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    /**\n     * 重置表单\n     */\n    async function resetForm() {\n        try {\n            form.resetFields();\n            const res: any = await service.fetchTagList();\n            const map = res.items.map((item: any, index: number) => {\n                return {\n                    id: item.id,\n                    key: index,\n                    name: item.name,\n                    time: DateUtils.formatDate(item.createTime),\n                }\n            })\n            setData(map);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    /**\n     * 打开新增标签的对话框\n     */\n    function openModal() {\n        setIsShowModal(true);\n    }\n\n    const [modalLoading, setModalLoading] = useState(false);\n    const [ModalForm] = Form.useForm();\n\n    /**\n     * 新增标签的表单提交\n     * @param values\n     */\n    async function modalOnFinish(values: any) {\n        try {\n            console.log(values)\n            setModalLoading(true)\n            const apiname = values.id ? \"fetchUpdateTag\" : \"fetchSaveTag\"\n            const res: any = await service[apiname]({\n                id: values.id,\n                name: values.tagName\n            })\n            if(res.status === 201 || res.status === 204) {\n                message.success(\"成功\")\n                ModalForm.resetFields();\n                await resetForm()\n                setIsShowModal(false)\n            } else {\n                message.warning(res.msg)\n            }\n        } catch (e) {\n            console.log(e);\n        } finally {\n            setModalLoading(false)\n        }\n    }\n\n    async function onDeleteTag(id: number) {\n        Modal.confirm({\n            title: '确诊删除吗',\n            icon: <ExclamationCircleOutlined/>,\n            okText: '确认',\n            cancelText: '取消',\n            onOk: async () => {\n                try {\n                    const res: any = await service.fetchDeleteTag(id);\n                    if(res.status === 204) {\n                        message.success(\"删除成功\")\n                        const index = data.findIndex((item: DataType) => item.id === id)\n                        data.splice(index, 1)\n                        const result = data.map(item => item);\n                        setData(result);\n                    }\n                } catch (e) {\n                    console.log(e);\n                }\n            }\n        })\n    }\n\n    function onEdit(record: DataType) {\n        ModalForm.setFieldsValue({id: record.id, tagName: record.name})\n        setIsShowModal(true);\n    }\n\n    const columns = [\n        {\n            title: '标签',\n            dataIndex: 'name',\n            key: 'name',\n            render: (text: string, record: DataType) => <a onClick={() => onEdit(record)}>{text}</a>,\n        },\n        {\n            title: '创建时间',\n            dataIndex: 'time',\n            key: 'time',\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text: string, record: DataType) => (\n                <Space size=\"middle\">\n                    <a onClick={() => onDeleteTag(record.id)} style={{color: \"#f5222d\"}}> 删除 </a>\n                </Space>\n            ),\n        },\n    ];\n\n    return (\n        <Layout>\n            {/* 查询表单 */}\n            <Form\n                form={form}\n                name=\"advanced_search\"\n                className=\"advanced-search-form\"\n                onFinish={onFinish}\n            >\n                <Row>\n                    <Col span={8}>\n                        <Form.Item\n                            name=\"keywords\"\n                            label=\"搜索标签\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '请输入查询关键词',\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"关键词\" name=\"tag\"/>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Button style={{margin: \"0 8px\"}} type=\"primary\" htmlType=\"submit\"> 搜索 </Button>\n                        <Button onClick={() => resetForm()}> 重置 </Button>\n                    </Col>\n                </Row>\n            </Form>\n\n            {/* 新增按钮 */}\n            <Button type=\"primary\" onClick={() => openModal()}> 新增标签 </Button>\n            <br/>\n            <br/>\n\n            {/* 新增标签的表单 */}\n            <Modal\n                forceRender\n                getContainer={false}\n                visible={isShowModal}\n                title={ModalForm.getFieldValue(\"id\") ? \"修改标签\" : \"新增标签\"}\n                onCancel={() => setIsShowModal(false)}\n                footer={null}\n            >\n                <Form\n                    form={ModalForm}\n                    name=\"addForm\"\n                    onFinish={modalOnFinish}\n\n                >\n                    <Row>\n                        <Col span={0}><Form.Item name=\"id\"><Input hidden name=\"id\" value={undefined}/></Form.Item></Col>\n                        <Col span={16}>\n                            <Form.Item\n                                name=\"tagName\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '请输入标签名称',\n                                    },\n                                ]}\n                            >\n                                <Input placeholder=\"请输入标签名称\" maxLength={20} name=\"tag name\"/>\n                            </Form.Item>\n                        </Col>\n                        <Col>\n                            <Button style={{margin: \"0 8px\"}} type=\"primary\" htmlType=\"submit\" loading={modalLoading}>\n                                {ModalForm.getFieldValue(\"id\") ? \"修改\" : \"新增\"}\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Modal>\n\n            {/* table数据展示 */}\n            <Table\n                pagination={false}\n                rowSelection={{\n                    type: \"checkbox\",\n                    ...rowSelection,\n                }}\n                dataSource={data}\n                columns={columns}\n            />\n        </Layout>\n    )\n}\n\nexport default Tags;","/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/apis/apis.ts",[],"/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/utils/DateUtils.ts",[],"/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/components/Layout/Layout.tsx",[],"/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/utils/request.ts",[],"/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/components/Layout/Slide.tsx",[],"/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/components/Layout/Main.tsx",[],["98","99"],"/Users/guanjiaming/Documents/project/blog2.0/blog-admin-react/src/pages/Images/Images.tsx",["100"],"import Layout from \"../../components/Layout/Layout\";\nimport {Button, Col, Form, Input, Row} from \"antd\";\nimport service from '../../apis/apis'\n\nfunction Images() {\n\n    const [form] = Form.useForm();\n\n    /**\n     * 搜索\n     */\n    async function onFinish(values: any) {\n        try {\n            const res = await service.fetchPictureListPage(values.name);\n        } catch (e) {\n\n        }\n    }\n\n    function resetForm() {\n        form.resetFields();\n\n    }\n\n\n    interface PictureItem {\n        src: string;\n        name: string;\n        id: string;\n    }\n    /**\n     *\n     * @param list\n     */\n    function renderPictureItems(list: Array<PictureItem>) {\n        let listArr: any = [];\n        for (let i = 0; i < list.length; i++) {\n            listArr.push(\n                <li>\n                    <img src={list[i].src} alt={list[i].name}/>\n                </li>\n            )\n        }\n        return (\n            listArr\n        )\n    }\n\n    return (\n        <Layout>\n            <Form\n                form={form}\n                name=\"form\"\n                onFinish={onFinish}\n            >\n                <Row>\n                    <Col span={8}>\n                        <Form.Item\n                            name=\"name\"\n                            label=\"图片名称\"\n                            rules={[{\n                                required: true,\n                                message: \"请输入图片名称\"\n                            }]}\n                        >\n                            <Input placeholder=\"图片名称\" name=\"name\"/>\n                        </Form.Item>\n                    </Col>\n                    <Col span={2}>\n                        <Button style={{margin: \"0 8px\"}} type=\"primary\" htmlType=\"submit\">搜索</Button>\n                        <Button onClick={resetForm}>重置</Button>\n                    </Col>\n                </Row>\n                <Row>\n                    <Button type=\"primary\"> 上传图片 </Button>\n                </Row>\n            </Form>\n\n            <br/>\n            <ul>\n                {renderPictureItems([{id: \"1\", src: \"123.png\", name: \"aaa\"},{id: \"1\", src: \"123.png\", name: \"aaa\"}])}\n            </ul>\n\n        </Layout>\n    )\n}\n\nexport default Images;",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":3,"column":30,"nodeType":"107","messageId":"108","endLine":3,"endColumn":35},{"ruleId":"105","severity":1,"message":"109","line":5,"column":18,"nodeType":"107","messageId":"108","endLine":5,"endColumn":27},{"ruleId":"105","severity":1,"message":"110","line":9,"column":8,"nodeType":"107","messageId":"108","endLine":9,"endColumn":17},{"ruleId":"111","severity":1,"message":"112","line":23,"column":38,"nodeType":"113","endLine":28,"endColumn":15},{"ruleId":"114","severity":1,"message":"115","line":43,"column":19,"nodeType":"116","messageId":"117","endLine":43,"endColumn":21},{"ruleId":"114","severity":1,"message":"118","line":71,"column":20,"nodeType":"116","messageId":"117","endLine":71,"endColumn":22},{"ruleId":"114","severity":1,"message":"115","line":36,"column":25,"nodeType":"116","messageId":"117","endLine":36,"endColumn":27},{"ruleId":"111","severity":1,"message":"119","line":110,"column":8,"nodeType":"120","endLine":110,"endColumn":10,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":178,"column":21,"nodeType":"124","endLine":178,"endColumn":99},{"ruleId":"122","severity":1,"message":"123","line":179,"column":21,"nodeType":"124","endLine":179,"endColumn":60},{"ruleId":"114","severity":1,"message":"115","line":37,"column":21,"nodeType":"116","messageId":"117","endLine":37,"endColumn":23},{"ruleId":"122","severity":1,"message":"123","line":167,"column":57,"nodeType":"124","endLine":167,"endColumn":91},{"ruleId":"122","severity":1,"message":"123","line":179,"column":21,"nodeType":"124","endLine":179,"endColumn":90},{"ruleId":"101","replacedBy":"125"},{"ruleId":"103","replacedBy":"126"},{"ruleId":"105","severity":1,"message":"127","line":14,"column":19,"nodeType":"107","messageId":"108","endLine":14,"endColumn":22},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'DateUtils' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'editor' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'page' and 'rows'. Either include them or remove the dependency array.","ArrayExpression",["130"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["128"],["129"],"'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [page, rows]",{"range":"133","text":"134"},[3085,3087],"[page, rows]"]