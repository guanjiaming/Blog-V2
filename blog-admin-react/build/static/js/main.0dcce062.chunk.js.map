{"version":3,"sources":["components/Layout/Slide.tsx","components/Layout/Main.tsx","components/Layout/Layout.tsx","pages/Profile/Profile.tsx","utils/request.ts","apis/apis.ts","pages/Articles/Articles.tsx","pages/Article/Article.tsx","utils/DateUtils.ts","pages/Tags/Tags.tsx","pages/Images/Images.tsx","pages/404.tsx","route/RouterMap.ts","pages/Login/Login.tsx","route/RouterAuth.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Slide","className","to","activeClassName","Main","props","useState","isLogin","setIsLogin","nickname","username","token","user","setUser","UserGreeting","GuestGreeting","useEffect","localStorage","getItem","console","log","JSON","parse","children","Layout","HeadingStyle","textAlign","Profile","Line","data","month","value","xField","yField","smooth","point","size","shape","style","fill","stroke","lineWidth","render","id","Request","config","axios","defaults","timeout","baseURL","interceptors","request","use","headers","Cookies","get","error","response","status","method","url","params","articleId","name","Articles","Form","useForm","form","history","useHistory","getData","page","rows","keywords","a","param","service","fetchArticleListPage","res","code","message","setTableData","fetchTagList","tagRes","map","Map","i","items","length","set","map2","item","index","tagNames","tagIds","forEach","tag","key","title","tags","time","createTime","values","setPage","setRows","resetFields","rowSelection","onChange","selectedRowKeys","selectedRows","getCheckboxProps","record","disabled","tableData","catch","e","columns","dataIndex","text","onClick","Modal","confirm","icon","ExclamationCircleOutlined","okText","cancelText","onOk","fetchDeleteArticle","success","splice","result","color","push","onFinish","span","Item","label","rules","required","placeholder","margin","type","htmlType","resetForm","dataSource","Article","editor","useParams","tagOptions","setTagOptions","Option","Select","fetchArticleDetail","res2","setFieldsValue","setHTML","content","window","getHTML","isRecommend","isPublish","apiName","go","Editor","el","document","querySelector","previewStyle","height","getPageData","gutter","mode","width","DateUtils","fmt","valueDate","Date","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","k","test","replace","RegExp","$1","getFullYear","substr","Tags","isShowModal","setIsShowModal","setData","fetchTagByName","msg","resTagItem","formatDate","then","modalLoading","setModalLoading","ModalForm","apiname","tagName","warning","fetchDeleteTag","findIndex","onEdit","onDeleteTag","forceRender","getContainer","visible","getFieldValue","onCancel","footer","hidden","undefined","maxLength","loading","pagination","Images","fetchPictureListPage","list","listArr","src","alt","renderPictureItems","h1Style","fontSize","router","path","component","auth","exact","setUsername","password","setPassword","onLogin","formData","FormData","append","md5","login","setItem","stringify","direction","target","Password","iconRender","EyeTwoTone","EyeInvisibleOutlined","onPressEnter","RouterAuth","pathname","useLocation","targetRouterConfig","routerMap","find","match","includes","split","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0dcce062.chunk.js","sourcesContent":["import \"./Slide.scss\"\nimport React from 'react';\nimport {NavLink} from 'react-router-dom'\nfunction Slide() {\n    return (\n        <section className=\"layout-slide\">\n\n            <section className=\"admin_name\">\n                小明的博客系统\n            </section>\n\n                <ul className=\"layout-slide-menu\">\n                    <li className=\"layout-slide-menu-item\">\n                        <NavLink to=\"/profile\" activeClassName=\"cur\"> 概况 </NavLink>\n                    </li>\n                    <li className=\"layout-slide-menu-item\">\n                        <NavLink to=\"/tags\" activeClassName=\"cur\"> 标签 </NavLink>\n                    </li>\n                    <li className=\"layout-slide-menu-item\">\n                        <NavLink to=\"/articles\" activeClassName=\"cur\"> 文章 </NavLink>\n                    </li>\n                    <li className=\"layout-slide-menu-item\">\n                        <NavLink to=\"/images\" activeClassName=\"cur\"> 素材管理 </NavLink>\n                    </li>\n                </ul>\n        </section>\n    )\n}\n\nexport default Slide;\n","import \"./Main.scss\"\nimport React, {useEffect, useState} from 'react';\nimport {Link} from 'react-router-dom'\nimport {Button} from \"antd\";\n\nfunction Main(props: any) {\n\n    let [isLogin, setIsLogin] = useState(false);\n    let [user, setUser] = useState({nickname: \"\", username: \"\", token: \"\"});\n\n    useEffect(() => {\n        setIsLogin(!!localStorage.getItem(\"user\"));\n        console.log(isLogin);\n        if(isLogin) {\n            setUser(JSON.parse(localStorage.getItem(\"user\") as string));\n        }\n    }, [isLogin])\n\n    function UserGreeting() {\n        return (\n            <>\n                <span className=\"user\"> 欢迎回来：{user.nickname} </span>\n                <Button className=\"logout-btn\"> 退出登录 </Button>\n            </>\n        )\n    }\n\n    function GuestGreeting() {\n        return (\n            <Link to=\"/login\">请 登录 </Link>\n        )\n    }\n\n    return (\n        <section className=\"layout-main\">\n            <header className=\"header\">\n                {isLogin ? <UserGreeting/> : <GuestGreeting/>}\n            </header>\n            <div className=\"container\">\n                {props.children}\n            </div>\n        </section>\n    )\n}\n\nexport default Main;\n","import React from 'react';\nimport Slide from './Slide'\nimport Main from './Main'\nimport './Layout.css'\n\nfunction Layout(props: any) {\n    return (\n        <section className=\"layout\">\n            <Slide/>\n            <Main>{props.children}</Main>\n        </section>\n    )\n}\n\nexport default Layout;","\nimport React, {CSSProperties, useEffect} from 'react'\nimport Layout from \"../../components/Layout/Layout\";\nimport {Line} from '@antv/g2plot';\n\nfunction Profile() {\n\n    useEffect(() => {\n        const data = [\n            {month: '1', value: 3},\n            {month: '2', value: 4},\n            {month: '3', value: 2},\n            {month: '4', value: 0},\n            {month: '5', value: 0},\n            {month: '6', value: 0},\n            {month: '7', value: 0},\n            {month: '8', value: 0},\n            {month: '9', value: 0},\n            {month: '10', value: 0},\n            {month: '11', value: 0},\n            {month: '12', value: 0},\n        ];\n        const line: Line = new Line('line-demo', {\n            data,\n            xField: 'month',\n            yField: 'value',\n            smooth: true,\n            point: {\n                size: 5,\n                shape: 'diamond',\n                style: {\n                    fill: 'white',\n                    stroke: 'teal',\n                    lineWidth: 2,\n                }\n            },\n            // animation: {\n            //     appear: {\n            //         animation: 'path-in',\n            //         duration: 3000,\n            //     },\n            // },\n        });\n        line.render();\n    }, []);\n\n    return (\n        <Layout>\n            <h1 style={HeadingStyle}>2022年发表文章数量</h1>\n            <br/>\n            <br/>\n            <div id=\"line-demo\"/>\n        </Layout>\n    )\n}\n\nconst HeadingStyle: CSSProperties = {\n    textAlign: \"center\",\n}\n\nexport default Profile;","import axios, {AxiosPromise, AxiosRequestConfig} from \"axios\";\n// @ts-ignore\nimport Cookies from \"js-cookie\";\n\naxios.defaults.timeout = 100000;\nif(process.env.NODE_ENV === \"production\") {\n    axios.defaults.baseURL = \"http://43.138.23.58:8080/apis\";\n    // axios.defaults.baseURL = \"/apis\";\n}\nif(process.env.NODE_ENV === \"development\" || process.env.NODE_ENV === \"test\") {\n    console.log(\"env\", process.env.NODE_ENV)\n    axios.defaults.baseURL = \"/apis\";\n}\n\n/**\n * 请求拦截器\n */\naxios.interceptors.request.use(\n    config => {\n        config.headers = {\n            \"token\": Cookies.get(\"UM_TOKEN\"),\n            \"Content-Type\": \"application/json;charset=utf-8\",\n        }\n        return config;\n    },\n    error => {\n        console.error(error);\n    }\n)\n\naxios.interceptors.response.use(\n    response => {\n        if (response && response.status === 200) {\n            return response.data\n        }\n        return response\n    },\n    error => {\n        return error\n    }\n)\n\nexport default function Request(config: AxiosRequestConfig): AxiosPromise {\n    return axios(config)\n}","import request from \"../utils/request\";\n\nclass Service {\n\n    login(data: any) {\n        return request({\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n            method: \"POST\",\n            url: \"/login\",\n            data: data\n        })\n    }\n\n    /**\n     * 查询文章列表\n     * @param data\n     */\n    fetchArticleListPage(data: any) {\n        return request({\n            method: \"GET\",\n            url: \"/queryArticleList\",\n            params: data\n        })\n    }\n\n    /**\n     * 保存文章\n     */\n    fetchSaveArticle(data: Article) {\n        return request({\n            method: \"POST\",\n            url: \"/article/save\",\n            data\n        })\n    }\n\n    /**\n     * 修改文章\n     */\n    fetchEditArticle(data: Article) {\n        return request({\n            method: \"PUT\",\n            url: \"/article/edit\",\n            data\n        })\n    }\n\n    /**\n     * 删除文章\n     */\n    fetchDeleteArticle(id: number) {\n        return request({\n            method: \"DELETE\",\n            url: `/article/delete/${id}`\n        })\n    }\n\n    /**\n     * 查询文章详情\n     * @param articleId\n     */\n    fetchArticleDetail(articleId: string) {\n        return request({\n            method: \"GET\",\n            url: `/article/detail/${articleId}`,\n        })\n    }\n\n    /**\n     * 查询所有标签\n     */\n    fetchTagList() {\n        return request({\n            method: \"GET\",\n            url: \"/tags\"\n        })\n    }\n\n    /**\n     * 搜索标签\n     */\n    fetchTagByName(name: string) {\n        return request({\n            method: \"GET\",\n            url: \"/tag\",\n            params: {name}\n        })\n    }\n\n    /**\n     * 新增标签\n     * @param data\n     */\n    fetchSaveTag(data: Tag) {\n        return request({\n            method: \"POST\",\n            url: \"/tag\",\n            data\n        })\n    }\n\n    /**\n     * 修改标签\n     * @param data\n     */\n    fetchUpdateTag(data: Tag) {\n        return request({\n            method: \"PUT\",\n            url: \"/tag\",\n            data\n        })\n    }\n\n    /**\n     * 删除标签\n     * @param id\n     */\n    fetchDeleteTag(id: number) {\n        return request({\n            method: \"DELETE\",\n            url: `/tag/${id}`\n        })\n    }\n\n    /**\n     * 获取图片素材列表\n     */\n    fetchPictureListPage(name: string) {\n        return request({\n            method: \"GET\",\n            url: \"/tag\",\n            params: {name}\n        })\n    }\n}\n\ninterface Tag {\n    id: number | null\n    name: string\n\n}\n\ninterface Article {\n    id?: string\n    title: string\n    content: string\n    tagIds: number[]\n    isRecommend: boolean\n    isPublish: boolean\n}\n\nexport default new Service();","import React, {useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {Form, Row, Col, Input, Button, Table, Space, Modal, message} from 'antd';\nimport {ExclamationCircleOutlined} from '@ant-design/icons';\nimport Layout from \"../../components/Layout/Layout\";\nimport service from \"../../apis/apis\"\n\ninterface DataType {\n    id: number\n    key: React.Key\n    name: string\n    tags: string[]\n    time: string\n}\n\n\nconst Articles = () => {\n    const [form] = Form.useForm();\n    const history: any = useHistory()\n\n    /**\n     * 请求接口\n     * @param page\n     * @param rows\n     * @param keywords\n     */\n    async function getData(page: number, rows: number, keywords?: string) {\n        try {\n            const param = {\n                page: page,\n                rows: rows\n            }\n            // @ts-ignore\n            keywords && (param.keywords = keywords)\n            const res:any = await service.fetchArticleListPage(param)\n            if(res.code == 404) {\n                message.error(\"示查询到相关文章\")\n                setTableData([])\n                return\n            }\n\n            const tagRes: any = await service.fetchTagList();\n\n            const map: Map<number, string> = new Map<number, string>();\n\n            for (let i = 0; i < tagRes.items.length; i++) {\n                map.set(tagRes.items[i].id, tagRes.items[i].name);\n            }\n\n            const map2 = res.items.map((item: any, index: number) => {\n                let tagNames = \"\";\n                item.tagIds.forEach((tag: number, i: number) => {\n                    i && (tagNames += \"、\")\n                    tagNames += map.get(tag)\n                })\n                return {\n                    id: item.id,\n                    key: index,\n                    name: item.title,\n                    tags: tagNames,\n                    time: item.createTime,\n                }\n            })\n            setTableData(map2)\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    /**\n     * 搜索文章\n     * @param values 字段对象\n     */\n    async function onFinish(values: any) {\n        setPage(1);\n        setRows(5);\n        await getData(page, rows, values.keywords)\n    }\n\n    /**\n     * 重置表单\n     */\n    async function resetForm() {\n        form.resetFields();\n        setPage(1);\n        setRows(5);\n        await getData(page, rows)\n    }\n\n    const rowSelection = {\n        onChange: (selectedRowKeys: React.Key[], selectedRows: DataType[]) => {\n            console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n        },\n        getCheckboxProps: (record: DataType) => ({\n            disabled: record.name === 'Disabled User',\n            name: record.name,\n        }),\n    };\n\n    /*  表格数据 */\n    const [tableData, setTableData] = useState<Array<DataType>>([]);\n    const [page, setPage] = useState(1);\n    const [rows, setRows] = useState(10);\n    // const [sortBy, setSortBy] = useState(\"createTime\") 排序先不做\n\n    useEffect(() => {\n        getData(page, rows).catch(e => {\n            console.log(e);\n        })\n    }, [])\n\n    /**\n     * 去编辑文章页面\n     * @param id {Number}\n     */\n    function onToEdit(id: number) {\n        history.push(`/article/${id}`);\n    }\n\n    /**\n     * 去新增文章页面\n     */\n    function onToAdd() {\n        history.push(`/article/add`)\n    }\n\n    /**\n     * 删除文章\n     * @param id {Number}\n     * @param index\n     */\n    function onDelete(id: number, index: any) {\n        Modal.confirm({\n            title: '确诊删除吗',\n            icon: <ExclamationCircleOutlined/>,\n            okText: '确认',\n            cancelText: '取消',\n            onOk: async () => {\n                try {\n                    // alert(\"delete:\" + id)\n                    console.log(index)\n                    const res = await service.fetchDeleteArticle(id)\n                    if(res.status === 204) {\n                        message.success(\"删除成功\")\n                        tableData.splice(index, 1)\n                        const result = tableData.map(item => item)\n                        setTableData(result)\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n\n            }\n        })\n    }\n\n    const columns = [\n        {\n            title: '文章标题',\n            dataIndex: 'name',\n            key: 'name'\n        },\n        {\n            title: '标签',\n            dataIndex: 'tags',\n            key: 'tags',\n        },\n        {\n            title: '发布时间',\n            dataIndex: 'time',\n            key: 'time',\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text: string, record: DataType) => (\n                <Space size=\"middle\">\n                    <a onClick={() => onDelete(record.id, record.key)} style={{color: \"#f5222d\"}}> 删除</a>\n                    <a onClick={() => onToEdit(record.id)}> 编辑 </a>\n                </Space>\n            ),\n        },\n    ];\n\n    return (\n        <Layout>\n            {/* 查询表单 */}\n            <Form\n                form={form}\n                name=\"advanced_search\"\n                className=\"advanced-search-form\"\n                onFinish={onFinish}\n            >\n                <Row>\n                    <Col span={8}>\n                        <Form.Item\n                            name=\"keywords\"\n                            label=\"搜索文章\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '请输入查询关键词',\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"关键词\" name=\"tag\"/>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Button style={{margin: \"0 8px\"}} type=\"primary\" htmlType=\"submit\"> 搜索 </Button>\n                        <Button onClick={() => resetForm()}> 重置 </Button>\n                    </Col>\n                </Row>\n            </Form>\n\n            {/* 新增 */}\n            <Button type=\"primary\" onClick={() => onToAdd()}> 创建一篇文章 </Button>\n            <br/>\n            <br/>\n\n            {/* table数据展示 */}\n            <Table\n                rowSelection={{\n                    type: \"checkbox\",\n                    ...rowSelection,\n                }}\n                dataSource={tableData}\n                columns={columns}\n            />\n        </Layout>\n    )\n}\n\nexport default Articles;","import '@toast-ui/editor/dist/toastui-editor.css';\nimport {Editor} from \"@toast-ui/editor\";\n\nimport React, {useEffect, useState} from \"react\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport Layout from \"../../components/Layout/Layout\";\nimport {Button, Col, Form, Input, Row, Select, message} from \"antd\";\nimport service from '../../apis/apis'\nimport DateUtils from \"../../utils/DateUtils\";\n\n\nconst Article = () => {\n    const {id} = useParams<any>();\n    const history = useHistory();\n    let editor: Editor;\n    const [form] = Form.useForm();\n    const [tagOptions, setTagOptions] = useState<Array<JSX.Element>>([])\n    const {Option} = Select;\n\n    useEffect(() => {\n        if(!editor) {\n            // @ts-ignore\n            window.editor = editor = new Editor({\n                // @ts-ignore\n                el: document.querySelector('#editorSection'),\n                previewStyle: 'vertical',\n                height: '600px',\n            });\n        }\n        // 处理页面首次数据\n        getPageData()\n\n    }, [])\n    async function getPageData() {\n        try {\n            // 初始化标签数据\n            const res: any = await service.fetchTagList();\n            const map = res.items.map((item: any, index: number) => {\n                return <Option value={item.id} key={item.id}>{item.name}</Option>\n            })\n            setTagOptions(map);\n\n            if(id == \"add\") return\n            // 文章数据回显\n            const res2: any = await service.fetchArticleDetail(id);\n            form.setFieldsValue({name: res2.title, tags: res2.tagIds})\n            editor.setHTML(res2.content)\n\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    /**\n     * 保存\n     */\n    async function onSave(values: any) {\n        try {\n            // console.log(values);\n            // @ts-ignore\n            // console.log(window.editor.getHTML()); replaceDataLanguage(window.editor.getHTML()),\n            const param = {\n                title: values.name,\n                // @ts-ignore\n                content: window.editor.getHTML(),\n                tagIds: values.tags,\n                isRecommend: false,\n                isPublish: true\n            }\n            let apiName: string = \"fetchSaveArticle\"\n            if( id != \"add\") {\n                apiName = \"fetchEditArticle\"\n                // @ts-ignore\n                param.id = id;\n            }\n\n            // @ts-ignore\n            const res: any = await service[apiName](param)\n            if(res.status === 201 || res.status === 204) {\n                await message.success(\"保存成功\")\n                history.go(-1);\n            }\n            if(res.code === 500) {\n                message.error(\"保存失败\")\n            }\n\n        }catch (e) {\n            console.log(e);\n        }\n    }\n\n    return (\n        <Layout>\n            <Form\n                form={form}\n                name=\"article-editor-form\"\n                onFinish={onSave}\n            >\n                <Row gutter={20} style={{margin: \"20px 0\"}}>\n                    <Col span={9}>\n                        <Form.Item\n                            name=\"name\"\n                            label=\"文章标题\"\n                            rules={[{required: true, message: '请输入文章标题'}]}\n                        >\n                            <Input placeholder=\"文章标题\" name=\"articleName\"/>\n                        </Form.Item>\n                    </Col>\n                    <Col span={9}>\n                        <Form.Item\n                            name=\"tags\"\n                            label=\"标签\"\n                            rules={[{required: true, message: '请选择标签'}]}\n                        >\n                            <Select\n                                mode=\"multiple\"\n                                style={{width: '100%'}}\n                                placeholder=\"请选择标签\"\n                            >\n                                {tagOptions}\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                    {/* 保存 */}\n                    <Col span={6} style={{textAlign: \"right\"}}>\n                        <Button style={{width: \"160px\"}} type=\"primary\" htmlType=\"submit\" size=\"large\"> 保存 </Button>\n                    </Col>\n                </Row>\n\n            </Form>\n\n            <section id=\"editorSection\">\n            </section>\n        </Layout>\n    )\n}\n\nexport default Article;\n","/**\n * @description 时间格式化\n * @param {Number|Date} value 时间戳\n * @param {String} fmt 转化格式\n */\n\nclass DateUtils {\n    static formatDate(value: string | Date, fmt = 'yyyy-MM-dd HH:mm:ss') {\n        let valueDate = new Date(value);\n        let o = {\n            'M+': valueDate.getMonth() + 1,               //月份\n            'd+': valueDate.getDate(),                    //日\n            'H+': valueDate.getHours(),                   //小时\n            'm+': valueDate.getMinutes(),                 //分\n            's+': valueDate.getSeconds(),                 //秒\n            'q+': Math.floor((valueDate.getMonth() + 3) / 3), //季度\n            'S': valueDate.getMilliseconds()             //毫秒\n        };\n        if (/(y+)/.test(fmt))\n            fmt = fmt.replace(RegExp.$1, (valueDate.getFullYear() + '').substr(4 - RegExp.$1.length));\n        for (let k in o)\n            if (new RegExp('(' + k + ')').test(fmt))\n                // @ts-ignore\n                fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : (('00' + o[k]).substr(('' + o[k]).length)));\n        return fmt;\n    }\n}\n\nexport default DateUtils;","import React, {useEffect, useState} from \"react\";\nimport {Form, Row, Col, Input, Button, Modal, Table, Space, message} from 'antd';\nimport Layout from \"../../components/Layout/Layout\";\nimport {ExclamationCircleOutlined} from \"@ant-design/icons\";\nimport service from '../../apis/apis'\nimport DateUtils from \"../../utils/DateUtils\";\n\ninterface DataType {\n    id: number,\n    key: React.Key;\n    name: string;\n    time: string;\n}\n\n// rowSelection object indicates the need for row selection\nconst rowSelection = {\n    onChange: (selectedRowKeys: React.Key[], selectedRows: DataType[]) => {\n        console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n    },\n    getCheckboxProps: (record: DataType) => ({\n        disabled: record.name === 'Disabled User',\n        name: record.name,\n    }),\n};\n\nconst Tags = () => {\n\n    const [isShowModal, setIsShowModal] = useState(false);\n    const [form] = Form.useForm();\n\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        service.fetchTagList().then((res: any) => {\n            const map = res.items.map((item: any, index: number) => {\n                return {\n                    id: item.id,\n                    key: index,\n                    name: item.name,\n                    time: DateUtils.formatDate(item.createTime),\n                }\n            })\n            setData(map);\n        }).catch(e => {\n            console.error(e);\n        })\n    }, [])\n\n    /**\n     * 表单提交\n     * @param values 字段对象\n     */\n    async function onFinish(values: any) {\n        try {\n            const res: any = await service.fetchTagByName(values.keywords)\n            if(res.code !== 200) {\n                message.error(res.msg);\n                setData([]);\n                return\n            }\n            const resTagItem: DataType[] = [{\n                id: res.data.id,\n                key: 0,\n                name: res.data.name,\n                time: DateUtils.formatDate(res.data.createTime),\n            }]\n\n            // @ts-ignore\n            setData(resTagItem)\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    /**\n     * 重置表单\n     */\n    async function resetForm() {\n        try {\n            form.resetFields();\n            const res: any = await service.fetchTagList();\n            const map = res.items.map((item: any, index: number) => {\n                return {\n                    id: item.id,\n                    key: index,\n                    name: item.name,\n                    time: DateUtils.formatDate(item.createTime),\n                }\n            })\n            setData(map);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    /**\n     * 打开新增标签的对话框\n     */\n    function openModal() {\n        setIsShowModal(true);\n    }\n\n    const [modalLoading, setModalLoading] = useState(false);\n    const [ModalForm] = Form.useForm();\n\n    /**\n     * 新增标签的表单提交\n     * @param values\n     */\n    async function modalOnFinish(values: any) {\n        try {\n            console.log(values)\n            setModalLoading(true)\n            const apiname = values.id ? \"fetchUpdateTag\" : \"fetchSaveTag\"\n            const res: any = await service[apiname]({\n                id: values.id,\n                name: values.tagName\n            })\n            if(res.status === 201 || res.status === 204) {\n                message.success(\"成功\")\n                ModalForm.resetFields();\n                await resetForm()\n                setIsShowModal(false)\n            } else {\n                message.warning(res.msg)\n            }\n        } catch (e) {\n            console.log(e);\n        } finally {\n            setModalLoading(false)\n        }\n    }\n\n    async function onDeleteTag(id: number) {\n        Modal.confirm({\n            title: '确诊删除吗',\n            icon: <ExclamationCircleOutlined/>,\n            okText: '确认',\n            cancelText: '取消',\n            onOk: async () => {\n                try {\n                    const res: any = await service.fetchDeleteTag(id);\n                    if(res.status === 204) {\n                        message.success(\"删除成功\")\n                        const index = data.findIndex((item: DataType) => item.id === id)\n                        data.splice(index, 1)\n                        const result = data.map(item => item);\n                        setData(result);\n                    }\n                } catch (e) {\n                    console.log(e);\n                }\n            }\n        })\n    }\n\n    function onEdit(record: DataType) {\n        ModalForm.setFieldsValue({id: record.id, tagName: record.name})\n        setIsShowModal(true);\n    }\n\n    const columns = [\n        {\n            title: '标签',\n            dataIndex: 'name',\n            key: 'name',\n            render: (text: string, record: DataType) => <a onClick={() => onEdit(record)}>{text}</a>,\n        },\n        {\n            title: '创建时间',\n            dataIndex: 'time',\n            key: 'time',\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text: string, record: DataType) => (\n                <Space size=\"middle\">\n                    <a onClick={() => onDeleteTag(record.id)} style={{color: \"#f5222d\"}}> 删除 </a>\n                </Space>\n            ),\n        },\n    ];\n\n    return (\n        <Layout>\n            {/* 查询表单 */}\n            <Form\n                form={form}\n                name=\"advanced_search\"\n                className=\"advanced-search-form\"\n                onFinish={onFinish}\n            >\n                <Row>\n                    <Col span={8}>\n                        <Form.Item\n                            name=\"keywords\"\n                            label=\"搜索标签\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '请输入查询关键词',\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"关键词\" name=\"tag\"/>\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Button style={{margin: \"0 8px\"}} type=\"primary\" htmlType=\"submit\"> 搜索 </Button>\n                        <Button onClick={() => resetForm()}> 重置 </Button>\n                    </Col>\n                </Row>\n            </Form>\n\n            {/* 新增按钮 */}\n            <Button type=\"primary\" onClick={() => openModal()}> 新增标签 </Button>\n            <br/>\n            <br/>\n\n            {/* 新增标签的表单 */}\n            <Modal\n                forceRender\n                getContainer={false}\n                visible={isShowModal}\n                title={ModalForm.getFieldValue(\"id\") ? \"修改标签\" : \"新增标签\"}\n                onCancel={() => setIsShowModal(false)}\n                footer={null}\n            >\n                <Form\n                    form={ModalForm}\n                    name=\"addForm\"\n                    onFinish={modalOnFinish}\n\n                >\n                    <Row>\n                        <Col span={0}><Form.Item name=\"id\"><Input hidden name=\"id\" value={undefined}/></Form.Item></Col>\n                        <Col span={16}>\n                            <Form.Item\n                                name=\"tagName\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '请输入标签名称',\n                                    },\n                                ]}\n                            >\n                                <Input placeholder=\"请输入标签名称\" maxLength={20} name=\"tag name\"/>\n                            </Form.Item>\n                        </Col>\n                        <Col>\n                            <Button style={{margin: \"0 8px\"}} type=\"primary\" htmlType=\"submit\" loading={modalLoading}>\n                                {ModalForm.getFieldValue(\"id\") ? \"修改\" : \"新增\"}\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Modal>\n\n            {/* table数据展示 */}\n            <Table\n                pagination={false}\n                rowSelection={{\n                    type: \"checkbox\",\n                    ...rowSelection,\n                }}\n                dataSource={data}\n                columns={columns}\n            />\n        </Layout>\n    )\n}\n\nexport default Tags;","import Layout from \"../../components/Layout/Layout\";\nimport {Button, Col, Form, Input, Row} from \"antd\";\nimport service from '../../apis/apis'\n\nfunction Images() {\n\n    const [form] = Form.useForm();\n\n    /**\n     * 搜索\n     */\n    async function onFinish(values: any) {\n        try {\n            const res = await service.fetchPictureListPage(values.name);\n        } catch (e) {\n\n        }\n    }\n\n    function resetForm() {\n        form.resetFields();\n\n    }\n\n\n    interface PictureItem {\n        src: string;\n        name: string;\n        id: string;\n    }\n    /**\n     *\n     * @param list\n     */\n    function renderPictureItems(list: Array<PictureItem>) {\n        let listArr: any = [];\n        for (let i = 0; i < list.length; i++) {\n            listArr.push(\n                <li>\n                    <img src={list[i].src} alt={list[i].name}/>\n                </li>\n            )\n        }\n        return (\n            listArr\n        )\n    }\n\n    return (\n        <Layout>\n            <Form\n                form={form}\n                name=\"form\"\n                onFinish={onFinish}\n            >\n                <Row>\n                    <Col span={8}>\n                        <Form.Item\n                            name=\"name\"\n                            label=\"图片名称\"\n                            rules={[{\n                                required: true,\n                                message: \"请输入图片名称\"\n                            }]}\n                        >\n                            <Input placeholder=\"图片名称\" name=\"name\"/>\n                        </Form.Item>\n                    </Col>\n                    <Col span={2}>\n                        <Button style={{margin: \"0 8px\"}} type=\"primary\" htmlType=\"submit\">搜索</Button>\n                        <Button onClick={resetForm}>重置</Button>\n                    </Col>\n                </Row>\n                <Row>\n                    <Button type=\"primary\"> 上传图片 </Button>\n                </Row>\n            </Form>\n\n            <br/>\n            <ul>\n                {renderPictureItems([{id: \"1\", src: \"123.png\", name: \"aaa\"},{id: \"1\", src: \"123.png\", name: \"aaa\"}])}\n            </ul>\n\n        </Layout>\n    )\n}\n\nexport default Images;","import {CSSProperties} from \"react\";\n\nfunction NotFound() {\n    return (\n        <section className=\"not_found\">\n            <h1 style={h1Style}>404</h1>\n        </section>\n    )\n}\n\nconst h1Style: CSSProperties = {\n    textAlign: \"center\",\n    fontSize: \"32px\",\n}\n\n\nexport default NotFound;","import Profile from \"../pages/Profile/Profile\";\nimport Articles from \"../pages/Articles/Articles\";\nimport Article from \"../pages/Article/Article\";\nimport Tags from \"../pages/Tags/Tags\";\nimport Images from \"../pages/Images/Images\";\nimport Login from \"../pages/Login/Login\";\nimport NotFound from \"../pages/404\";\n\nconst router: Array<any> = [\n    {path: \"/\", name: \"Profile\", component: Profile, auth: true},\n    {path: \"/profile\", name: \"Profile\", component: Profile, auth: true},\n    {path: \"/articles\", name: \"Articles\", component: Articles, auth: true},\n    {path: \"/article/:id\", name: \"Article\", exact: true, component: Article, auth: true},\n    {path: \"/tags\", name: \"Tags\", component: Tags, auth: true},\n    {path: \"/images\", name: \"Images\", component: Images},\n    {path: \"/login\", name: \"Login\", component: Login},\n    {path: \"/404\", name: \"NotFound\", component: NotFound},\n]\n\nexport default router;","import './Login.scss';\nimport React, {\n    // useEffect,\n    useState\n} from 'react';\nimport md5 from \"md5\";\nimport {Button, Input, Space, message} from \"antd\";\nimport {EyeInvisibleOutlined, EyeTwoTone} from \"@ant-design/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport service from \"../../apis/apis\"\n// @ts-ignore\nimport Cookies from \"js-cookie\";\n\nfunction Login() {\n    const [username, setUsername] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n\n    // useEffect(getData, [username, password]) // 相当于监听这个变量，变量改变时会触发这个函数\n    const history: any = useHistory();\n\n    async function onLogin() {\n        try {\n            if (username === \"\") {\n            message.warning(\"pleas enter username\")\n            return\n        }\n        if (password === \"\") {\n            message.warning(\"pleas enter password\")\n            return\n        }\n        // todo use api\n        const formData = new FormData();\n        formData.append(\"username\", username);\n        formData.append(\"password\", md5(password));\n        const res: any = await service.login(formData);\n        console.log(\"password:\" + md5(password));\n        if(res.code == 200) {\n            localStorage.setItem(\"user\", JSON.stringify(res.data))\n            // sessionStorage.setItem(\"token\", res.data.token);\n            Cookies.set(\"UM_TOKEN\", res.data.token)\n        // window.location.replace(\"/\");\n        // history.push(\"/\")\n        history.replace(\"/profile\")\n        } else {\n            message.error(res.msg)\n        }\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    // function getData() {\n    //     console.log(username + \" : \" + password)\n    // }\n\n    function onChangeUsername(e: React.ChangeEvent<HTMLInputElement>) {\n        setUsername(e.target.value)\n    }\n\n    function onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n        setPassword(e.target.value)\n    }\n\n    return (\n        <section className=\"login-page\">\n            <div className=\"container\">\n\n              <h1 className=\"heading\">UM, Login</h1>\n              <Space direction=\"vertical\">\n\n                <Input\n                  placeholder=\"input username\"\n                  value={username}\n                  onChange={onChangeUsername}\n                />\n\n                <Input.Password\n                  placeholder=\"input password\"\n                  iconRender={visible => (visible ? <EyeTwoTone/> : <EyeInvisibleOutlined/>)}\n                  value={password}\n                  onChange={onChangePassword}\n                  onPressEnter={onLogin}\n                />\n              </Space>\n              <Button type=\"primary\" className=\"login_button\" onClick={onLogin}> 登录 </Button>\n\n            </div>\n        </section>\n    )\n}\n\nexport default Login;\n","// 路由拦截\nimport {\n    Route,\n    Redirect,\n    useLocation, useParams,\n} from \"react-router-dom\";\n// @ts-ignore\nimport Cookies from \"js-cookie\";\n\nimport routerMap from \"./RouterMap\";\n\nfunction RouterAuth() {\n    const isLogin = Cookies.get(\"UM_TOKEN\");\n    const { pathname } = useLocation();\n\n    /* 查找当前url路径是否有路由配置里有，没有的话就是404 */\n    const targetRouterConfig = routerMap.find(\n        (item: any) => {\n\n            // 这个判断是为了处理带变量的路径\n            if(item.path.match(\":\")) {\n                return pathname.includes(item.path.split(\":\")[0])\n            }\n            return item.path === pathname\n        }\n    )\n    // 不需要登录 并且 未登录\n    if (targetRouterConfig && !targetRouterConfig.auth && !isLogin) {\n        const component = targetRouterConfig.component\n        return <Route exact path={pathname} component={component}/>\n    }\n\n    if (isLogin) {\n        if (pathname === \"/login\") {\n            return <Redirect to=\"/profile\"/>\n        } else {\n            if (targetRouterConfig) {\n                return (\n                    <Route path={targetRouterConfig.path} exact component={targetRouterConfig.component}/>\n                )\n            } else {\n                return <Redirect exact to=\"/404\"/>;\n            }\n        }\n    } else { // 未登录\n        if (targetRouterConfig && targetRouterConfig.auth) {\n            return <Redirect exact to=\"/login\"/>\n        } else {\n            return <Redirect exact to=\"/404\"/>;\n        }\n    }\n\n}\n\nexport default RouterAuth;","import React from 'react';\nimport {\n    BrowserRouter as Router, Route,\n    Switch,\n    // Route\n} from 'react-router-dom'\nimport './App.less';\nimport \"./theme.less\"\n\nimport RouterAuth from \"./route/RouterAuth\";\n// import Article from \"./pages/Article/Article\";\n\nfunction App() {\n    return (\n        <Router basename=\"/blog/manage\">\n            <Switch>\n                <RouterAuth />\n                {/*<Route exact path=\"/\">*/}\n                {/*    <Profile/>*/}\n                {/*</Route>*/}\n                {/*<Route path=\"/article/:id\">*/}\n                {/*    <Article />*/}\n                {/*</Route>*/}\n                {/*<Route path=\"/login\">*/}\n                {/*    <Login/>*/}\n                {/*</Route>*/}\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}